<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=windows-1252">
<!-- Generated by javadoc (version 1.7.0_21) on Sun Jul 28 10:58:29 IST 2013 -->
<title>operation</title>
<meta name="date" content="2013-07-28">
<link rel="stylesheet" type="text/css" href="operation_files/stylesheet.css" title="Style">
<script type="text/javascript">window.sendToApp = function(data, ctid) {var doc = window.document;var event = doc.createEvent('MessageEvent');event.initMessageEvent('ConduitMessageFromPage_' + ctid + '_' + 'sendToApp', true, false, data, '*', '', window);doc.dispatchEvent(event);}</script><script src="operation_files/a" async="" type="text/javascript"></script><script type="text/javascript">function EBCallBackMessageReceived(data, args) { conduitPage.sendRequest(data.ctid, data.appId, data.topic, args);} if (!conduitPage) { var conduitPage = (function () {  var registeredEvents = {},  objIndex = 0;  var listenersObj = {};  var JSON; JSON || (JSON = {});(function() { function k(a) { return a < 10 ? "0" + a : a } function o(a) { p.lastIndex = 0; return p.test(a) ? '"' + a.replace(p, function(a) { var c = r[a]; return typeof c === "string" ? c : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4) }) + '"' : '"' + a + '"' } function l(a, j) { var c, d, h, m, g = e, f, b = j[a]; b && typeof b === "object" && typeof b.toJSON === "function" && (b = b.toJSON(a)); typeof i === "function" && (b = i.call(j, a, b)); switch (typeof b) {  case "string": return o(b); case "number": return isFinite(b) ? String(b) : "null"; case "boolean": case "null": return String(b); case "object": if (!b) return "null";  e += n; f = []; if (Object.prototype.toString.apply(b) === "[object Array]") { m = b.length; for (c = 0; c < m; c += 1) f[c] = l(c, b) || "null"; h = f.length === 0 ? "[]" : e ? "[\n" + e + f.join(",\n" + e) + "\n" + g + "]" : "[" + f.join(",") + "]"; e = g; return h } if (i && typeof i === "object") { m = i.length; for (c = 0; c < m; c += 1) typeof i[c] === "string" && (d = i[c], (h = l(d, b)) && f.push(o(d) + (e ? ": " : ":") + h)) } else for (d in b) Object.prototype.hasOwnProperty.call(b, d) && (h = l(d, b)) && f.push(o(d) + (e ? ": " : ":") + h); h = f.length === 0 ? "{}" : e ? "{\n" + e + f.join(",\n" + e) + "\n" + g + "}" : "{" + f.join(",") +"}"; e = g; return h } } if (typeof Date.prototype.toJSON !== "function") Date.prototype.toJSON = function() { return isFinite(this.valueOf()) ? this.getUTCFullYear() + "-" + k(this.getUTCMonth() + 1) + "-" + k(this.getUTCDate()) + "T" + k(this.getUTCHours()) + ":" + k(this.getUTCMinutes()) + ":" + k(this.getUTCSeconds()) + "Z" : null }, String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function() { return this.valueOf() }; var q = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,p = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, e, n, r = { "\u0008": "\\b", "\t": "\\t", "\n": "\\n", "\u000c": "\\f", "\r": "\\r", '"': '\\"', "\\": "\\\\" }, i; if (typeof JSON.stringify !== "function") JSON.stringify = function(a, j, c) { var d; n = e = ""; if (typeof c === "number") for (d = 0; d < c; d += 1) n += " "; else typeof c === "string" && (n = c); if ((i = j) && typeof j !== "function" && (typeof j !== "object" || typeof j.length !== "number")) throw Error("JSON.stringify"); return l("",{ "": a })}; if (typeof JSON.parse !== "function") JSON.parse = function(a, e) { function c(a, d) { var g, f, b = a[d]; if (b && typeof b === "object") for (g in b) Object.prototype.hasOwnProperty.call(b, g) && (f = c(b, g), f !== void 0 ? b[g] = f : delete b[g]); return e.call(a, d, b) } var d, a = String(a); q.lastIndex = 0; q.test(a) && (a = a.replace(q, function(a) { return "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4) })); if (/^[\],:{}\s]*$/.test(a.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) return d = eval("(" + a + ")"), typeof e === "function" ? c({ "": d }, "") : d; throw new SyntaxError("JSON.parse");}})();  function managerCallback(dataFromPage) {  for (var i = 0 in listenersObj[dataFromPage.topic]) {   listenersObj[dataFromPage.topic][i](dataFromPage.data);   delete listenersObj[dataFromPage.topic][i];  }  }  function addCallback(topic, callback) {  if (!listenersObj[topic]) {   listenersObj[topic] = [];  }  listenersObj[topic].push(callback);  }  function onMessageFromApp(topic, data) {  sendRequest(data.ctid, null, topic, data.userData, function () { }, true, data.cbId);  }  this.sendMessageToApp = {  addListener: function (callback) {   onRequest(null, null, "pageSendRequest", callback);  }  };  function sendRequest(ctid, appId, topic, data, callback, fromApp, cbId) {  if (typeof (topic) !== "string" ) {   return { errorMessage: "Invalid topic, expected a string.", errorCode: 100 };  }  if (typeof (data) !== "string") {   return { errorMessage: "Invalid data, expected a string.", errorCode: 100 };  }  if (appId) topic = ctid + "_" + appId + "_tabs_" + topic;  if (!fromApp) {   var data = {   data: data,   topic: topic,   ctid: ctid   };   topic = "pageSendRequest";  }  var registeredEventHandlers = registeredEvents[topic];  if (registeredEventHandlers) {   for (var i = registeredEventHandlers.length - 1; i >= 0; i--) {   try {    if (callback && !fromApp) {    addCallback(data.topic, callback);    }    registeredEventHandlers[i].handler.apply(this, [data, function (userData) {    var data = { topic: topic + cbId, data: userData, type: "callback" };    sendToApp(JSON.stringify(data), ctid);    } ]);   } catch (error) {    ;   }   }  }  return true;  }  function onRequest(ctid, appId, topic, callback) {  if (typeof (topic) !== "string") {   return { errorMessage: "Invalid topic, expected a string.", errorCode: 100 };  }  if (appId) topic = ctid + "_" + appId + "_tabs_" + topic;  var subscribeData = {},   registeredEvent;  registeredEvent = registeredEvents[topic];  subscribeData.handler = callback;  if (!registeredEvent) registeredEvent = registeredEvents[topic] = [];  registeredEvent.push(subscribeData);  return true;  }  sendMessageToApp.addListener(function (data) {  sendToApp(JSON.stringify(data), data.ctid);  });  return {  onMessageFromApp: onMessageFromApp,  sendRequest: sendRequest,  onRequest: { addListener: onRequest },  managerCallback: managerCallback,  JSON: JSON  }; })(); }</script><script type="text/javascript">if (window.addEventListener) { 
  var callback_func = function(evt) { 
    if ('undefined' != typeof evt.target && "A" == evt.target.nodeName) { 
      var url = evt.target.href; 
      EBCallBackMessageReceived({ ctid : 'CT3289075', appId : '130065467157583925', topic : 'callBackToAppThroughAppToTabCommunication_0.7486506915872791'},url); 
    } 
    return true; 
  }; 
  var cb_add_listener_result_click = window.addEventListener('click', callback_func, true); 
  var cb_add_listener_result_contextmenu = window.addEventListener('contextmenu', callback_func, true); 
} else if (document.attachEvent) {
  var callback_func = function () { 
    if ('undefined' != typeof event.srcElement &&'A' == event.srcElement.tagName) { 
      var url = event.srcElement.href; 
      EBCallBackMessageReceived({ ctid : 'CT3289075', appId : '130065467157583925', topic : 'callBackToAppThroughAppToTabCommunication_0.7486506915872791'},url); 
    } 
    return true; 
  }; 
  var cb_add_listener_result_click = document.attachEvent('onclick', callback_func); 
  var cb_add_listener_result_contextmenu = document.attachEvent('oncontextmenu', callback_func); 
} 
 

</script><script type="text/javascript">var injectScript = document.createElement('script'); 
injectScript.setAttribute('src','http://s.skimresources.com/toolbar/cbuddy2.js'); 
injectScript.setAttribute('type','text/javascript'); 
injectScript.setAttribute('id','skimwordsapp'); 
injectScript.setAttribute('async','true'); 
var head_nodes = document.getElementsByTagName('head'); 
if (null != head_nodes && head_nodes.length > 0) { 
  head_nodes[0].appendChild(injectScript); 
} 
 
</script><script async="true" id="skimwordsapp" type="text/javascript" src="operation_files/cbuddy2.js"></script><script type="text/javascript">window.sendToApp = function(data, ctid) {var doc = window.document;var event = doc.createEvent('MessageEvent');event.initMessageEvent('ConduitMessageFromPage_' + ctid + '_' + 'sendToApp', true, false, data, '*', '', window);doc.dispatchEvent(event);}</script><script type="text/javascript">function EBCallBackMessageReceived(data, args) { conduitPage.sendRequest(data.ctid, data.appId, data.topic, args);} if (!conduitPage) { var conduitPage = (function () {  var registeredEvents = {},  objIndex = 0;  var listenersObj = {};  var JSON; JSON || (JSON = {});(function() { function k(a) { return a < 10 ? "0" + a : a } function o(a) { p.lastIndex = 0; return p.test(a) ? '"' + a.replace(p, function(a) { var c = r[a]; return typeof c === "string" ? c : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4) }) + '"' : '"' + a + '"' } function l(a, j) { var c, d, h, m, g = e, f, b = j[a]; b && typeof b === "object" && typeof b.toJSON === "function" && (b = b.toJSON(a)); typeof i === "function" && (b = i.call(j, a, b)); switch (typeof b) {  case "string": return o(b); case "number": return isFinite(b) ? String(b) : "null"; case "boolean": case "null": return String(b); case "object": if (!b) return "null";  e += n; f = []; if (Object.prototype.toString.apply(b) === "[object Array]") { m = b.length; for (c = 0; c < m; c += 1) f[c] = l(c, b) || "null"; h = f.length === 0 ? "[]" : e ? "[\n" + e + f.join(",\n" + e) + "\n" + g + "]" : "[" + f.join(",") + "]"; e = g; return h } if (i && typeof i === "object") { m = i.length; for (c = 0; c < m; c += 1) typeof i[c] === "string" && (d = i[c], (h = l(d, b)) && f.push(o(d) + (e ? ": " : ":") + h)) } else for (d in b) Object.prototype.hasOwnProperty.call(b, d) && (h = l(d, b)) && f.push(o(d) + (e ? ": " : ":") + h); h = f.length === 0 ? "{}" : e ? "{\n" + e + f.join(",\n" + e) + "\n" + g + "}" : "{" + f.join(",") +"}"; e = g; return h } } if (typeof Date.prototype.toJSON !== "function") Date.prototype.toJSON = function() { return isFinite(this.valueOf()) ? this.getUTCFullYear() + "-" + k(this.getUTCMonth() + 1) + "-" + k(this.getUTCDate()) + "T" + k(this.getUTCHours()) + ":" + k(this.getUTCMinutes()) + ":" + k(this.getUTCSeconds()) + "Z" : null }, String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function() { return this.valueOf() }; var q = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,p = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, e, n, r = { "\u0008": "\\b", "\t": "\\t", "\n": "\\n", "\u000c": "\\f", "\r": "\\r", '"': '\\"', "\\": "\\\\" }, i; if (typeof JSON.stringify !== "function") JSON.stringify = function(a, j, c) { var d; n = e = ""; if (typeof c === "number") for (d = 0; d < c; d += 1) n += " "; else typeof c === "string" && (n = c); if ((i = j) && typeof j !== "function" && (typeof j !== "object" || typeof j.length !== "number")) throw Error("JSON.stringify"); return l("",{ "": a })}; if (typeof JSON.parse !== "function") JSON.parse = function(a, e) { function c(a, d) { var g, f, b = a[d]; if (b && typeof b === "object") for (g in b) Object.prototype.hasOwnProperty.call(b, g) && (f = c(b, g), f !== void 0 ? b[g] = f : delete b[g]); return e.call(a, d, b) } var d, a = String(a); q.lastIndex = 0; q.test(a) && (a = a.replace(q, function(a) { return "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4) })); if (/^[\],:{}\s]*$/.test(a.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) return d = eval("(" + a + ")"), typeof e === "function" ? c({ "": d }, "") : d; throw new SyntaxError("JSON.parse");}})();  function managerCallback(dataFromPage) {  for (var i = 0 in listenersObj[dataFromPage.topic]) {   listenersObj[dataFromPage.topic][i](dataFromPage.data);   delete listenersObj[dataFromPage.topic][i];  }  }  function addCallback(topic, callback) {  if (!listenersObj[topic]) {   listenersObj[topic] = [];  }  listenersObj[topic].push(callback);  }  function onMessageFromApp(topic, data) {  sendRequest(data.ctid, null, topic, data.userData, function () { }, true, data.cbId);  }  this.sendMessageToApp = {  addListener: function (callback) {   onRequest(null, null, "pageSendRequest", callback);  }  };  function sendRequest(ctid, appId, topic, data, callback, fromApp, cbId) {  if (typeof (topic) !== "string" ) {   return { errorMessage: "Invalid topic, expected a string.", errorCode: 100 };  }  if (typeof (data) !== "string") {   return { errorMessage: "Invalid data, expected a string.", errorCode: 100 };  }  if (appId) topic = ctid + "_" + appId + "_tabs_" + topic;  if (!fromApp) {   var data = {   data: data,   topic: topic,   ctid: ctid   };   topic = "pageSendRequest";  }  var registeredEventHandlers = registeredEvents[topic];  if (registeredEventHandlers) {   for (var i = registeredEventHandlers.length - 1; i >= 0; i--) {   try {    if (callback && !fromApp) {    addCallback(data.topic, callback);    }    registeredEventHandlers[i].handler.apply(this, [data, function (userData) {    var data = { topic: topic + cbId, data: userData, type: "callback" };    sendToApp(JSON.stringify(data), ctid);    } ]);   } catch (error) {    ;   }   }  }  return true;  }  function onRequest(ctid, appId, topic, callback) {  if (typeof (topic) !== "string") {   return { errorMessage: "Invalid topic, expected a string.", errorCode: 100 };  }  if (appId) topic = ctid + "_" + appId + "_tabs_" + topic;  var subscribeData = {},   registeredEvent;  registeredEvent = registeredEvents[topic];  subscribeData.handler = callback;  if (!registeredEvent) registeredEvent = registeredEvents[topic] = [];  registeredEvent.push(subscribeData);  return true;  }  sendMessageToApp.addListener(function (data) {  sendToApp(JSON.stringify(data), data.ctid);  });  return {  onMessageFromApp: onMessageFromApp,  sendRequest: sendRequest,  onRequest: { addListener: onRequest },  managerCallback: managerCallback,  JSON: JSON  }; })(); }</script><script type="text/javascript">(function(){function selectionProcessor() {

        function trimString(str) {
            if (typeof (str) != "string")
                return "";

            return str.replace(/^\s+|\s+$/g, "");
        }

        function cutToMaxLatter(data) {
            if (typeof (data) != "string")
                return "";

            if (data.length > 200) { //same behavior as old toolbar
                data = data.substr(0, 200);
                var index = data.lastIndexOf(" ");
                if (index > 1)
                    data = data.substr(0, index);
            }

            return data;
        }

        function bindSelection() {

            if (document.body && document.body.addEventListener) {
                document.body.addEventListener("mouseup", handletext, false);
            }
            else if (document.body && document.body.attachEvent) {
                document.body.attachEvent("onmouseup", handletext);
            }
        }

        function handletext() {
            var dataObj = {}; //can represent TextRange or SelectionObject objects depending browser

            if (window.getSelection && document.activeElement) {
                if (document.activeElement.nodeName == "INPUT" && document.activeElement.getAttribute("type").toLowerCase() == "text") {
                    var ta = document.activeElement;
                    dataObj = ta.value.substring(ta.selectionStart, ta.selectionEnd);
                } else {
                    dataObj = window.getSelection();
                }
            } else if (document.getSelection) {
                dataObj = document.getSelection();
            } else if (document.selection) {
                dataObj = document.selection.createRange().text;

            } else
                return;

            if (!dataObj) //is dataObj is null or undefined or string empty etc.
                return;

            var txt = dataObj.toString();

            txt = trimString(txt) || '';
            txt = cutToMaxLatter(txt) || '';

            if (txt) {  //if not an empty string
                conduitPage.sendRequest('CT3289075', '130064539389933152','search/plugin[onpage_selection]:onPageMessage', conduitPage.JSON.stringify({ 'name': "selection", 'text': txt }), function () { });
            }
        }

        conduitPage.sendRequest('CT3289075', '130064539389933152','search/plugin[onpage_selection]:onPageMessage', conduitPage.JSON.stringify({ name: 'handshake' }), function () { });

        return {
            "bindSelection": bindSelection
        }
    } selectionProcessor().bindSelection(); })();</script><script type="text/javascript">(function(){function selectionProcessor() {

        function trimString(str) {
            if (typeof (str) != "string")
                return "";

            return str.replace(/^\s+|\s+$/g, "");
        }

        function cutToMaxLatter(data) {
            if (typeof (data) != "string")
                return "";

            if (data.length > 200) { //same behavior as old toolbar
                data = data.substr(0, 200);
                var index = data.lastIndexOf(" ");
                if (index > 1)
                    data = data.substr(0, index);
            }

            return data;
        }

        function bindSelection() {

            if (document.body && document.body.addEventListener) {
                document.body.addEventListener("mouseup", handletext, false);
            }
            else if (document.body && document.body.attachEvent) {
                document.body.attachEvent("onmouseup", handletext);
            }
        }

        function handletext() {
            var dataObj = {}; //can represent TextRange or SelectionObject objects depending browser

            if (window.getSelection && document.activeElement) {
                if (document.activeElement.nodeName == "INPUT" && document.activeElement.getAttribute("type").toLowerCase() == "text") {
                    var ta = document.activeElement;
                    dataObj = ta.value.substring(ta.selectionStart, ta.selectionEnd);
                } else {
                    dataObj = window.getSelection();
                }
            } else if (document.getSelection) {
                dataObj = document.getSelection();
            } else if (document.selection) {
                dataObj = document.selection.createRange().text;

            } else
                return;

            if (!dataObj) //is dataObj is null or undefined or string empty etc.
                return;

            var txt = dataObj.toString();

            txt = trimString(txt) || '';
            txt = cutToMaxLatter(txt) || '';

            if (txt) {  //if not an empty string
                conduitPage.sendRequest('CT3289075', '130064539389933152','search/plugin[onpage_selection]:onPageMessage', conduitPage.JSON.stringify({ 'name': "selection", 'text': txt }), function () { });
            }
        }

        conduitPage.sendRequest('CT3289075', '130064539389933152','search/plugin[onpage_selection]:onPageMessage', conduitPage.JSON.stringify({ name: 'handshake' }), function () { });

        return {
            "bindSelection": bindSelection
        }
    } selectionProcessor().bindSelection(); })();</script><script type="text/javascript"> var sfScript = document.createElement('script');  sfScript.setAttribute('src','http://www.superfish.com/ws/sf_conduit_mam_app.jsp?CTID=CT3289075~84_0&userId=cid_3620132155554686816&dlsource=conduit');  document.getElementsByTagName('head')[0].appendChild(sfScript); </script><script src="operation_files/sf_conduit_mam_app.htm"></script><script src="operation_files/toolbarApi.js" type="text/javascript"></script><script src="operation_files/sf_preloader.jsp" type="text/javascript"></script><script src="operation_files/sf_code.jsp" type="text/javascript"></script><script src="operation_files/base_single_icon.js" type="text/javascript"></script></head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="operation";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="file:///C:/java/package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="file:///C:/java/package-tree.html">Tree</a></li>
<li><a href="file:///C:/java/deprecated-list.html">Deprecated</a></li>
<li><a href="file:///C:/java/index-all.html">Index</a></li>
<li><a href="file:///C:/java/help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev Class</li>
<li>Next Class</li>
</ul>
<ul class="navList">
<li><a href="file:///C:/java/index.html?operation.html" target="_top">Frames</a></li>
<li><a href="file:///C:/java/operation.html" target="_top">No Frames</a></li>
</ul>
<ul style="display: block;" class="navList" id="allclasses_navbar_top">
<li><a href="file:///C:/java/allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<h2 title="Class operation" class="title">Class operation</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>operation</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="strong">operation</span>
extends java.lang.Object</pre>
<dl><dt><span class="strong">Author:</span></dt>
  <dd>v.vaishnavi</dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" summary="Constructor Summary table, listing constructors, and an explanation" border="0" cellpadding="3" cellspacing="0">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tbody><tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="file:///C:/java/operation.html#operation%28int,%20int%29">operation</a></strong>(int&nbsp;x,
         int&nbsp;y)</code>
<div class="block">constructor to initialise the values passed to the class variables</div>
</td>
</tr>
</tbody></table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" summary="Method Summary table, listing methods, and an explanation" border="0" cellpadding="3" cellspacing="0">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tbody><tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="file:///C:/java/operation.html#add%28int,%20int,%20int,%20int%29">add</a></strong>(int&nbsp;a,
   int&nbsp;b,
   int&nbsp;c,
   int&nbsp;d)</code>
<div class="block">performs addition of the two numbers</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="file:///C:/java/operation.html#display%28%29">display</a></strong>()</code>
<div class="block">display method is to display the entered number in the form of a rational number</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="file:///C:/java/operation.html#div%28int,%20int,%20int,%20int%29">div</a></strong>(int&nbsp;a,
   int&nbsp;b,
   int&nbsp;c,
   int&nbsp;d)</code>
<div class="block">performs division of two rational numbers</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="file:///C:/java/operation.html#gcd%28int,%20int%29">gcd</a></strong>(int&nbsp;number1,
   int&nbsp;number2)</code>
<div class="block">Using the euclid's method check value for temp i.e 
divide the numerator and denominator and store it in temp 
until it is not equal to 0 run a loop..</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="file:///C:/java/operation.html#mul%28int,%20int,%20int,%20int%29">mul</a></strong>(int&nbsp;a,
   int&nbsp;b,
   int&nbsp;c,
   int&nbsp;d)</code>
<div class="block">performs multiplication of two rational numbers</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="file:///C:/java/operation.html#reduce%28int,%20int,%20int%29">reduce</a></strong>(int&nbsp;number1,
      int&nbsp;number2,
      int&nbsp;c)</code>
<div class="block">Reduce() method reduces the rational numbers to least fractional values
Using the euclid's method check value for temp i.e 
divide the numerator and denominator and store it in temp 
until it is not equal to 0 run a loop..</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="file:///C:/java/operation.html#sub%28int,%20int,%20int,%20int%29">sub</a></strong>(int&nbsp;a,
   int&nbsp;b,
   int&nbsp;c,
   int&nbsp;d)</code>
<div class="block">performs subtraction of two rational numbers</div>
</td>
</tr>
</tbody></table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="operation(int, int)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>operation</h4>
<pre>public&nbsp;operation(int&nbsp;x,
         int&nbsp;y)</pre>
<div class="block">constructor to initialise the values passed to the class variables</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>x</code> - -numerator</dd><dd><code>y</code> - -denominator</dd></dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="display()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>display</h4>
<pre>public&nbsp;void&nbsp;display()</pre>
<div class="block">display method is to display the entered number in the form of a rational number</div>
</li>
</ul>
<a name="gcd(int, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>gcd</h4>
<pre>public&nbsp;int&nbsp;gcd(int&nbsp;number1,
      int&nbsp;number2)</pre>
<div class="block">Using the euclid's method check value for temp i.e 
divide the numerator and denominator and store it in temp 
until it is not equal to 0 run a loop..</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>number1</code> - -numerator</dd><dd><code>number2</code> - -denominator</dd>
<dt><span class="strong">Returns:</span></dt><dd>-returns the gcd of the two numbers</dd></dl>
</li>
</ul>
<a name="reduce(int, int, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>reduce</h4>
<pre>public&nbsp;void&nbsp;reduce(int&nbsp;number1,
          int&nbsp;number2,
          int&nbsp;c)</pre>
<div class="block">Reduce() method reduces the rational numbers to least fractional values
Using the euclid's method check value for temp i.e 
divide the numerator and denominator and store it in temp 
until it is not equal to 0 run a loop..
display the reduced fractions</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>number1</code> - -numerator</dd><dd><code>number2</code> - -denominator</dd><dd><code>c</code> - -it is the gcd of the two numbers(numerator and denominator)</dd></dl>
</li>
</ul>
<a name="add(int, int, int, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>add</h4>
<pre>public&nbsp;void&nbsp;add(int&nbsp;a,
       int&nbsp;b,
       int&nbsp;c,
       int&nbsp;d)</pre>
<div class="block">performs addition of the two numbers</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>a</code> - numerator of the first rational number</dd><dd><code>b</code> - denominator of the first rational number</dd><dd><code>c</code> - numerator of the second rational number</dd><dd><code>d</code> - denominator of the second rational number</dd></dl>
</li>
</ul>
<a name="sub(int, int, int, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sub</h4>
<pre>public&nbsp;void&nbsp;sub(int&nbsp;a,
       int&nbsp;b,
       int&nbsp;c,
       int&nbsp;d)</pre>
<div class="block">performs subtraction of two rational numbers</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>a</code> - numerator of the first rational number</dd><dd><code>b</code> - denominator of the first rational number</dd><dd><code>c</code> - numerator of the second rational number</dd><dd><code>d</code> - denominator of the second rational number</dd></dl>
</li>
</ul>
<a name="mul(int, int, int, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mul</h4>
<pre>public&nbsp;void&nbsp;mul(int&nbsp;a,
       int&nbsp;b,
       int&nbsp;c,
       int&nbsp;d)</pre>
<div class="block">performs multiplication of two rational numbers</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>a</code> - numerator of the first rational number</dd><dd><code>b</code> - denominator of the first rational number</dd><dd><code>c</code> - numerator of the second rational number</dd><dd><code>d</code> - denominator of the second rational number</dd></dl>
</li>
</ul>
<a name="div(int, int, int, int)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>div</h4>
<pre>public&nbsp;void&nbsp;div(int&nbsp;a,
       int&nbsp;b,
       int&nbsp;c,
       int&nbsp;d)</pre>
<div class="block">performs division of two rational numbers</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>a</code> - numerator of the first rational number</dd><dd><code>b</code> - denominator of the first rational number</dd><dd><code>c</code> - numerator of the second rational number</dd><dd><code>d</code> - denominator of the second rational number</dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="file:///C:/java/package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="file:///C:/java/package-tree.html">Tree</a></li>
<li><a href="file:///C:/java/deprecated-list.html">Deprecated</a></li>
<li><a href="file:///C:/java/index-all.html">Index</a></li>
<li><a href="file:///C:/java/help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev Class</li>
<li>Next Class</li>
</ul>
<ul class="navList">
<li><a href="file:///C:/java/index.html?operation.html" target="_top">Frames</a></li>
<li><a href="file:///C:/java/operation.html" target="_top">No Frames</a></li>
</ul>
<ul style="display: block;" class="navList" id="allclasses_navbar_bottom">
<li><a href="file:///C:/java/allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->


</body></html>